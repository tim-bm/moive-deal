// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace MovieDeal.DataSource.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class MovieDetail : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>The Actors property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Actors { get; set; }
#nullable restore
#else
        public string Actors { get; set; }
#endif
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The Awards property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Awards { get; set; }
#nullable restore
#else
        public string Awards { get; set; }
#endif
        /// <summary>The Country property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Country { get; set; }
#nullable restore
#else
        public string Country { get; set; }
#endif
        /// <summary>The Director property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Director { get; set; }
#nullable restore
#else
        public string Director { get; set; }
#endif
        /// <summary>The Genre property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Genre { get; set; }
#nullable restore
#else
        public string Genre { get; set; }
#endif
        /// <summary>The ID property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ID { get; set; }
#nullable restore
#else
        public string ID { get; set; }
#endif
        /// <summary>The Language property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Language { get; set; }
#nullable restore
#else
        public string Language { get; set; }
#endif
        /// <summary>The Metascore property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Metascore { get; set; }
#nullable restore
#else
        public string Metascore { get; set; }
#endif
        /// <summary>The Plot property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Plot { get; set; }
#nullable restore
#else
        public string Plot { get; set; }
#endif
        /// <summary>The Poster property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Poster { get; set; }
#nullable restore
#else
        public string Poster { get; set; }
#endif
        /// <summary>The Price property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Price { get; set; }
#nullable restore
#else
        public string Price { get; set; }
#endif
        /// <summary>The Rated property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Rated { get; set; }
#nullable restore
#else
        public string Rated { get; set; }
#endif
        /// <summary>The Rating property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Rating { get; set; }
#nullable restore
#else
        public string Rating { get; set; }
#endif
        /// <summary>The Released property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Released { get; set; }
#nullable restore
#else
        public string Released { get; set; }
#endif
        /// <summary>The Runtime property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Runtime { get; set; }
#nullable restore
#else
        public string Runtime { get; set; }
#endif
        /// <summary>The Title property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Title { get; set; }
#nullable restore
#else
        public string Title { get; set; }
#endif
        /// <summary>The Type property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Type { get; set; }
#nullable restore
#else
        public string Type { get; set; }
#endif
        /// <summary>The Votes property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Votes { get; set; }
#nullable restore
#else
        public string Votes { get; set; }
#endif
        /// <summary>The Writer property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Writer { get; set; }
#nullable restore
#else
        public string Writer { get; set; }
#endif
        /// <summary>The Year property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Year { get; set; }
#nullable restore
#else
        public string Year { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::MovieDeal.DataSource.Models.MovieDetail"/> and sets the default values.
        /// </summary>
        public MovieDetail()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::MovieDeal.DataSource.Models.MovieDetail"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::MovieDeal.DataSource.Models.MovieDetail CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::MovieDeal.DataSource.Models.MovieDetail();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "Actors", n => { Actors = n.GetStringValue(); } },
                { "Awards", n => { Awards = n.GetStringValue(); } },
                { "Country", n => { Country = n.GetStringValue(); } },
                { "Director", n => { Director = n.GetStringValue(); } },
                { "Genre", n => { Genre = n.GetStringValue(); } },
                { "ID", n => { ID = n.GetStringValue(); } },
                { "Language", n => { Language = n.GetStringValue(); } },
                { "Metascore", n => { Metascore = n.GetStringValue(); } },
                { "Plot", n => { Plot = n.GetStringValue(); } },
                { "Poster", n => { Poster = n.GetStringValue(); } },
                { "Price", n => { Price = n.GetStringValue(); } },
                { "Rated", n => { Rated = n.GetStringValue(); } },
                { "Rating", n => { Rating = n.GetStringValue(); } },
                { "Released", n => { Released = n.GetStringValue(); } },
                { "Runtime", n => { Runtime = n.GetStringValue(); } },
                { "Title", n => { Title = n.GetStringValue(); } },
                { "Type", n => { Type = n.GetStringValue(); } },
                { "Votes", n => { Votes = n.GetStringValue(); } },
                { "Writer", n => { Writer = n.GetStringValue(); } },
                { "Year", n => { Year = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("Actors", Actors);
            writer.WriteStringValue("Awards", Awards);
            writer.WriteStringValue("Country", Country);
            writer.WriteStringValue("Director", Director);
            writer.WriteStringValue("Genre", Genre);
            writer.WriteStringValue("ID", ID);
            writer.WriteStringValue("Language", Language);
            writer.WriteStringValue("Metascore", Metascore);
            writer.WriteStringValue("Plot", Plot);
            writer.WriteStringValue("Poster", Poster);
            writer.WriteStringValue("Price", Price);
            writer.WriteStringValue("Rated", Rated);
            writer.WriteStringValue("Rating", Rating);
            writer.WriteStringValue("Released", Released);
            writer.WriteStringValue("Runtime", Runtime);
            writer.WriteStringValue("Title", Title);
            writer.WriteStringValue("Type", Type);
            writer.WriteStringValue("Votes", Votes);
            writer.WriteStringValue("Writer", Writer);
            writer.WriteStringValue("Year", Year);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
